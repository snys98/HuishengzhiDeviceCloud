@using System.Configuration
@using DeviceCloud.Models
@using DeviceLibrary
@using Newtonsoft.Json


<div class="am-g am-g-fixed transmonitor-g-fixed">
    <div class="am-u-md-4">
        <div class="am-panel-group">
            @*<section class="am-panel am-panel-primary">
                <div class="am-panel-hd">样本转运监控</div>
                <div class="am-panel-bd">
                    <div class="am-form-inline">
                        <fieldset class="am-g">
                            <label for="select-device">选择设备: </label>
                            <select id="select-device" data-am-selected>
                                <option value="051201001">设备1</option>
                                <option value="0">设备2</option>
                            </select>
                            <button onclick="reloadDatas(document.getElementById('select-device').value)" class="am-btn am-btn-success">确定</button>
                        </fieldset>
                    </div>
                </div>
            </section>*@
            <section class="am-panel am-panel-primary">
                <div class="am-panel-hd">详情</div>
	            <div class="am-panel-bd am-g">
		            <div class="am-u-sm-8 am-center">
						<span class="am-icon-user">  承运人:</span>
						<span class="am-fr">周克华</span>
		            </div>
		            <div class="am-u-sm-12">
						<table class="am-table am-table-bordered am-table-striped am-table-hover">
							<thead>
								<tr>
									<th>样本ID</th>
									<th>样本类型</th>
									<th>创建时间</th>
								</tr>
							</thead>
							<tbody>
								<tr>
									<td>RX7989</td>
									<td>T型病毒样本</td>
									<td>2015-10-11</td>
								</tr>
								<tr>
									<td>RX7988</td>
									<td>T型病毒样本</td>
									<td>2015-10-01</td>
								</tr>
							</tbody>
						</table>
		            </div>
	            </div>
            </section>
            <section class="am-panel am-panel-primary">
                <div class="am-panel-hd">选项</div>
                <div class="am-panel-bd">

                </div>
            </section>
        </div>
    </div>
    <div class="am-u-md-8" style="height: 100%;">
        <div class="am-panel-group">
            <section class="am-panel am-panel-primary">
                <div class="am-panel-hd">地图视图</div>
                <div id="Bmap" class="am-panel-bd"></div>
            </section>
            <section class="am-panel am-panel-primary">
                <div class="am-panel-hd">数据视图</div>
				<div id="chart" class="am-panel-bd" onresize="function(){chart.resize(); }"></div>
            </section>
        </div>
    </div>
</div>
@section CustomScripts
{
	@*引入百度地图*@
	<script type="text/javascript" src="http://api.map.baidu.com/api?v=2.0&ak=@ConfigurationManager.AppSettings.Get("BaiduApiKey")"></script>
	<script type="text/javascript" src="~/Content/js/map/map-api.js"></script>
	@*引入echart*@
	<script src="http://echarts.baidu.com/build/dist/echarts.js"></script>
	<script type="text/javascript">
		// 百度地图API功能
		var map; // 创建Map实例
		var chart;
		var chartOption;
		var locationInfos;
		/*
		// -------全局通用
		REFRESH: 'refresh',
		RESTORE: 'restore',
		RESIZE: 'resize',
		CLICK: 'click',
		DBLCLICK: 'dblclick',
		HOVER: 'hover',
		MOUSEOUT: 'mouseout',
		// -------业务交互逻辑
		DATA_CHANGED: 'dataChanged',
		DATA_ZOOM: 'dataZoom',
		DATA_RANGE: 'dataRange',
		DATA_RANGE_HOVERLINK: 'dataRangeHoverLink',
		LEGEND_SELECTED: 'legendSelected',
		LEGEND_HOVERLINK: 'legendHoverLink',
		MAP_SELECTED: 'mapSelected',
		PIE_SELECTED: 'pieSelected',
		MAGIC_TYPE_CHANGED: 'magicTypeChanged',
		DATA_VIEW_CHANGED: 'dataViewChanged',
		TIMELINE_CHANGED: 'timelineChanged',
		MAP_ROAM: 'mapRoam',
		*/
		// 使用
		//初始化echart
		require.config({
			paths: {
				echarts: 'http://echarts.baidu.com/build/dist'
			}
		});
		require(
			[
				'echarts',
				'echarts/chart/line' // 使用柱状图就加载bar模块，按需加载
			],
			function(ec) {
				// 基于准备好的dom，初始化echarts图表
				chart = ec.init(document.getElementById('chart'), 'macarons');
				chartOption = {
					tooltip: {
						trigger: 'axis',
						show: true
					},
					legend: {
						data: ['温度(℃)', '湿度(%)']
					},
					xAxis: [
						{
							type: 'category',
							//这里赋值X坐标轴上的值,应该赋值时间
							//data: ["2015-12-1", "2015-12-2", "2015-12-3", "2015-12-4", "2015-12-5", "2015-12-6"],
							//markLine: {
							//    data: [
							//        { type: 'average', name: '平均值' }
							//    ]
							//}
						}
					],
					yAxis: [
						{
							type: 'value',
						}
					],
					series: [
						{
							name: "温度(℃)",
							type: "line",
							//这里赋值Y坐标轴上的值,应该赋值对应时间的值
							data: [],
							markLine: {
								data: [
									{ type: 'average', name: '平均值' }
								],
								clickable: false,
							},
							markPoint: {
								data: [
									{ type: 'max', name: '最大值' },
									{ type: 'min', name: '最小值' }
								],
								clickable: false,
							},
							symbol: 'none',
							showAllSymbol: true,
						},
						{
							name: "湿度(%)",
							type: "line",
							//这里赋值Y坐标轴上的值,应该赋值对应时间的值
							data: [],
							markLine: {
								data: [
									{ type: 'average', name: '平均值' }
								],
								clickable: false,
							},
							markPoint: {
								data: [
									{ type: 'max', name: '最大值' },
									{ type: 'min', name: '最小值' }
								],
								clickable: false,
							},
							symbol: 'none',
							showAllSymbol: true,
						}
					]
				}
				chart.setOption(chartOption);
			}
		);
		var ecConfig = require('echarts/config');

		function locateMarker(param) {
			//var mes = '【' + param.type + '】';
			//if (typeof param.seriesIndex != 'undefined') {
			//	mes += '  seriesIndex : ' + param.seriesIndex;
			//	mes += '  dataIndex : ' + param.dataIndex;
			//}
			//else {
			//	document.getElementById('console').innerHTML = mes;
			//}
			console.log(param);
			if (param.type == "click" && typeof param.seriesIndex != 'undefined') {
				map_api_PanTo(locationInfos[param.dataIndex].Longitude, locationInfos[param.dataIndex].Latitude);
			}
		}

		//建立marker内容
		function buildMarkerContent(infoList) {
			var html = "<div>";
			html += "<p>温度: " + infoList.Temperature + " ℃<p>";
			html += "<p>湿度: " + infoList.Humidity + " %<p>";
			html += "</div>";
			return html;
		}

		//初始化所有点位置,时间格式:yyyyMMddHHmmss
		function loadMarkers(transLogs) {
			initMap();
			for (var i = 0; i < transLogs.length; i++) {
				map_api_AddWindowMarker(transLogs[i].Longitude, transLogs[i].Latitude, buildMarkerContent(transLogs[i]));
			}
			map_api_BuildLine();
			@*var content;
		@foreach (TranLog data in ViewBag.Monitor.Datas)
			{
			<text>
		content = "@Html.Raw(data.ToMarkerInfo())"
		AddWindowMarker(@data.Longitude, @data.Latitude, content);
		</text>
			}*@
		};

		function loadChart(transLogs) {
			var tempratureDatas = [];
			var humidityDatas = [];
			var xAxisLables = [];
			for (var i = 0; i < transLogs.length; i++) {
				tempratureDatas.push(transLogs[i].Temperature);
				humidityDatas.push(transLogs[i].Humidity);
				//replace只是为了美化时间显示
				xAxisLables.push(transLogs[i].UploadTime.substring(5).replace("T", " "));
			}
			//温度
			chartOption.series[0].data = tempratureDatas;
			//湿度
			chartOption.series[1].data = humidityDatas;
			//X轴时间
			chartOption.xAxis[0].data = xAxisLables;
			chart.on(ecConfig.EVENT.CLICK, locateMarker);
			chart.setOption(chartOption);
		};

		function reloadDatas(deviceId,startTime,endTime) {
			$.post("@Url.Action("GetSampleMonitor", "SampleMonitor")",
				{
					//起止时间需要从数据库里面根据当前设备绑定承运设备的时间起算
					startTime: startTime,
					endTime: endTime,
					deviceId: deviceId
				},
				function(data, status) {
					if (status == "success") {
						locationInfos = data.TransLogs;
						loadMarkers(locationInfos);
						loadChart(locationInfos);
					}
				}, "json");
		}

		function initMap() {
			map = new BMap.Map("Bmap");
			map.centerAndZoom(new BMap.Point(104.072168, 30.557979), 17); // 初始化地图,设置中心点坐标和地图级别
			map.enableScrollWheelZoom(true); //开启鼠标滚轮缩放
			map_api_Clear();
		}

		$(document).ready(initMap());
	</script>
}

@section CustomStyle
{
    <style type="text/css">
        @@media only screen and (min-width: 1200px) {
            .transmonitor-g-fixed { max-width: 1200px; }
        }

        @@media only screen and (min-width: 641px) {
            .transmonitor-sidebar {
                font-size: 1.4rem;
                padding-top: 20px;
            }
        }

        #Bmap {
            width: 100%;
            height: 38.5vh;
        }

        #chart {
            width: 100%;
            height: 38.5vh;
        }

        .transmonitor-g-fixed { padding-top: 10px; }

        body { height: 100vh; }

        footer {
            bottom: 0;
            position: fixed;
            width: 100vw;
        }
    </style>
}