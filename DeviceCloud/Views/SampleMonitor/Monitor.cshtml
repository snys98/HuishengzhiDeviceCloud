@using System.Configuration
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head lang="en">
	<meta charset="UTF-8">
	<title>样本监控</title>
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport"
		  content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no">
	<meta name="format-detection" content="telephone=no">
	<meta name="renderer" content="webkit">
	<meta http-equiv="Cache-Control" content="no-siteapp" />
	<link rel="alternate icon" type="image/png" href="~/Content/favicon.ico">
	@Styles.Render("~/bundles/common-css")
</head>
<body>
	<div class="am-g am-g-fixed transmonitor-g-fixed" style="height: 100%;">
		<div class="am-panel-group" style="height: 98vh">
			<section class="am-panel am-panel-primary" style="height: 50%;">
				<div class="am-panel-hd">地图视图</div>
				<div class="am-panel-bd" style="padding: 0;height: 44.5vh;">
					<div id="Bmap" style="height: 100%;"></div>
				</div>
			</section>
			<section class="am-panel am-panel-primary" style="height: 50%;">
				<div class="am-panel-hd">数据视图</div>
				<div class="am-panel-bd" style="height: 100%">
					<div id="chart" style="height: 100%;"></div>
				</div>
			</section>
		</div>
	</div>
	<!--[if lt IE 9]>
		@Scripts.Render("~/bundles/ie9-lt-js")
	<script src="http://cdn.staticfile.org/modernizr/2.8.3/modernizr.js"></script>
	<![endif]-->
	<!--[if (gte IE 9)|!(IE)]><!-->
	@Scripts.Render("~/bundles/ie9-gt-js")
	@*引入百度地图*@
	<script type="text/javascript" src="http://api.map.baidu.com/api?v=2.0&ak=@ConfigurationManager.AppSettings.Get("BaiduApiKey")"></script>
	<script type="text/javascript" src="http://api.map.baidu.com/library/EventWrapper/1.2/src/EventWrapper.min.js"></script>
	<script type="text/javascript" src="~/Content/js/map/map-api.js"></script>
	@*引入echart*@
	<script src="http://echarts.baidu.com/build/dist/echarts.js"></script>
	<script type="text/javascript">
	// 百度地图API功能
	var map; // 创建Map实例
	var chart;
	var chartOption;
	var locationInfos;
	/*
	// -------全局通用
	REFRESH: 'refresh',
	RESTORE: 'restore',
	RESIZE: 'resize',
	CLICK: 'click',
	DBLCLICK: 'dblclick',
	HOVER: 'hover',
	MOUSEOUT: 'mouseout',
	// -------业务交互逻辑
	DATA_CHANGED: 'dataChanged',
	DATA_ZOOM: 'dataZoom',
	DATA_RANGE: 'dataRange',
	DATA_RANGE_HOVERLINK: 'dataRangeHoverLink',
	LEGEND_SELECTED: 'legendSelected',
	LEGEND_HOVERLINK: 'legendHoverLink',
	MAP_SELECTED: 'mapSelected',
	PIE_SELECTED: 'pieSelected',
	MAGIC_TYPE_CHANGED: 'magicTypeChanged',
	DATA_VIEW_CHANGED: 'dataViewChanged',
	TIMELINE_CHANGED: 'timelineChanged',
	MAP_ROAM: 'mapRoam',
	*/
	// 使用
	//初始化echart
	require.config({
		paths: {
			echarts: 'http://echarts.baidu.com/build/dist'
		}
	});
	require(
		[
			'echarts',
			'echarts/chart/line' // 使用柱状图就加载bar模块，按需加载
		],
		function (ec) {
			// 基于准备好的dom，初始化echarts图表
			chart = ec.init(document.getElementById('chart'), 'macarons');
			chartOption = {
				tooltip: {
					trigger: 'axis',
					show: true
				},
				legend: {
					data: ['温度(℃)', '湿度(%)']
				},
				xAxis: [
					{
						type: 'category',
						//这里赋值X坐标轴上的值,应该赋值时间
						//data: ["2015-12-1", "2015-12-2", "2015-12-3", "2015-12-4", "2015-12-5", "2015-12-6"],
						//markLine: {
						//    data: [
						//        { type: 'average', name: '平均值' }
						//    ]
						//}
					}
				],
				yAxis: [
					{
						type: 'value',
					}
				],
				series: [
					{
						name: "温度(℃)",
						type: "line",
						//这里赋值Y坐标轴上的值,应该赋值对应时间的值
						data: [],
						markLine: {
							data: [
								{ type: 'average', name: '平均值' }
							],
							clickable: false,
						},
						markPoint: {
							data: [
								{ type: 'max', name: '最大值' },
								{ type: 'min', name: '最小值' }
							],
							clickable: false,
						},
						symbol: 'none',
						showAllSymbol: true,
					},
					{
						name: "湿度(%)",
						type: "line",
						//这里赋值Y坐标轴上的值,应该赋值对应时间的值
						data: [],
						markLine: {
							data: [
								{ type: 'average', name: '平均值' }
							],
							clickable: false,
						},
						markPoint: {
							data: [
								{ type: 'max', name: '最大值' },
								{ type: 'min', name: '最小值' }
							],
							clickable: false,
						},
						symbol: 'none',
						showAllSymbol: true,
					}
				]
			}
			chart.setOption(chartOption);
		}
	);
	var ecConfig = require('echarts/config');

	function locateMarker(param) {
		//var mes = '【' + param.type + '】';
		//if (typeof param.seriesIndex != 'undefined') {
		//	mes += '  seriesIndex : ' + param.seriesIndex;
		//	mes += '  dataIndex : ' + param.dataIndex;
		//}
		//else {
		//	document.getElementById('console').innerHTML = mes;
		//}
		console.log(param);
		if (param.type == "click" && typeof param.seriesIndex != 'undefined') {
			map_api_PanTo(locationInfos[param.dataIndex].Longitude, locationInfos[param.dataIndex].Latitude);
			BMapLib.EventWrapper.trigger(Markers[param.dataIndex], 'click', { 'type': 'onclick', target: Markers[param.dataIndex] });
		}
	}

	//建立marker内容
	function buildMarkerContent(transLog) {
		var html = "<div>";
		html += "<p>温度: " + transLog.Temperature + " ℃<p>";
		html += "<p>湿度: " + transLog.Humidity + " %<p>";
		html += "</div>";
		return html;
	}

	//初始化所有点位置,时间格式:yyyyMMddHHmmss
	function loadMarkers(transLogs) {
		init();
		for (var i = 0; i < transLogs.length; i++) {
			map_api_AddWindowMarker(transLogs[i].Longitude, transLogs[i].Latitude, buildMarkerContent(transLogs[i]));
		}
		map_api_BuildLine();
		@*var content;
		@foreach (TranLog data in ViewBag.Monitor.Datas)
			{
			<text>
		content = "@Html.Raw(data.ToMarkerInfo())"
		AddWindowMarker(@data.Longitude, @data.Latitude, content);
		</text>
			}*@
	};

	function loadChart(transLogs) {
		var tempratureDatas = [];
		var humidityDatas = [];
		var xAxisLables = [];
		for (var i = 0; i < transLogs.length; i++) {
			tempratureDatas.push(transLogs[i].Temperature);
			humidityDatas.push(transLogs[i].Humidity);
			//replace只是为了美化时间显示
			xAxisLables.push(transLogs[i].UploadTime.substring(5).replace("T", " "));
		}
		//温度
		chartOption.series[0].data = tempratureDatas;
		//湿度
		chartOption.series[1].data = humidityDatas;
		//X轴时间
		chartOption.xAxis[0].data = xAxisLables;
		chart.on(ecConfig.EVENT.CLICK, locateMarker);
		chart.setOption(chartOption);
	};
	function resizeChart() {
		chart.resize();
	}

	function reloadDatas(deviceId, startTime, endTime) {
		$.post("@Url.Action("GetSampleMonitor", "SampleMonitor")",
				{
					//起止时间需要从数据库里面根据当前设备绑定承运设备的时间起算
					startTime: startTime,
					endTime: endTime,
					deviceId: deviceId
				},
				function (data, status) {
					if (status == "success") {
						locationInfos = data.TransLogs;
						loadMarkers(locationInfos);
						loadChart(locationInfos);
					}
				}, "json");
		}

		function init() {
			siteRoot = "@Url.Content("~")";
			markerStyleOption = { icon: new BMap.Icon(siteRoot + "Content/images/map/marker.png", new BMap.Size(20, 20)) };
			map = new BMap.Map("Bmap");
			map.centerAndZoom(new BMap.Point(104.072168, 30.557979), 17); // 初始化地图,设置中心点坐标和地图级别
			map.enableScrollWheelZoom(true); //开启鼠标滚轮缩放
			map_api_Clear();
			document.body.onresize = resizeChart;
		}

		function DisableA() {

			for (var i = 0; i < document.getElementsByTagName("a").length; i++) {

				document.getElementsByTagName("a")[i].onclick = function () { return false }
			}
		}

		$(document).ready(init());
	</script>
</body>
</html>
